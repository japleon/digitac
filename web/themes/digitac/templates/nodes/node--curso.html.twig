{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('bootstrap5/node') }}

<article{{attributes.addClass(classes)}}>

	<div class="challenge">
		<div class="challenge__header">
			<div class="challenge__header-content">
				<div class="tag">
					{{content.field_curso_categoria.0}}
				</div>

				<div class="title">
					{{label}}
                              <br>

                              {% for key,item in content.field_curso_target['#items'] %}
                                    {%if item.entity.name.value %}
                                    <span class="tag target">{{item.entity.name.value}}</span>
                                    {% endif %}
                              {% endfor %}

				</div>

                        {{ drupal_view('votingapi_votes', 'block_2', node.id ) }}
			</div>


			<div class="challenge__header-image">

				<svg width="488" height="191" viewbox="0 0 488 191" fill="none" xmlns="http://www.w3.org/2000/svg">
					<clipPath id="clip-path3">
						<rect x="104" width="384" height="191" rx="95.5" fill="#D9D9D9"/>
					</clipPath>
					<image x="104" width="384" height="191" preserveAspectRatio="xMidYMid slice" clip-path="url(#clip-path3)" href="{{content.field_curso_imagen.0}}" alt="Image" class="svg__image">
				</svg>


			</div>
		</div>
	</div>

      <div class="headband-company">
            <div class="headband-company__content">
                  <div class="col col-company">
                        <span class="company__title">{{content.field_curso_empresa_formacion.0}}</span>
                        {% if content.field_curso_enlace.0['#url_title'] %}
                        <span class="company__link"><a href="{{content.field_curso_enlace.0['#url_title']}}" target="_blank">{{'Accede al curso'|t}}</a></span>
                        {% endif %}
                  </div>
                  <div class="col col--price">
                        <span class="price">
                              {{content.field_curso_gratuidad.0}}
                              {{content.field_curso_precios.0}}
                        </span>
                        <span class="date">
                              {{content.field_curso_fecha_inicio.0}}
                        </span>
                  </div>
                  <div class="col col-time">
                        <span>{{content.field_curso_duracion.0}}</span>
		            <span>{{content.field_curso_duracion_sesiones.0}}</span>
                  </div>
                  <div class="col col-place">
                        <span>{{content.field_curso_tipo.0}}</span>
                  </div>
            </div>
      </div>

	<div class="course-content">
            <div class="course-content__body">
                  <h2>{{'Sobre este curso'|t}}</h2>
                  {{ content.body }}
            </div>

            <div class="ratings">
                  <div class="ratings__content">
                        <span>{{'Valora este curso'|t}}</span>
                        {% if logged_in %}
                              {{ content.rate_stars }}
                        {% else %}
                              <span class="ratings__login">{{'Para hacer una valoración debes'|t}}&nbsp;<a href="/user/login">{{'iniciar sesión'|t}}</a>&nbsp;o&nbsp;<a href="/user/register">{{'regístrarte'|t}}</a></span>
                        {% endif %}
                  </div>
            </div>

            {% if content.field_curso_audiencia.0!="" %}
            <div class="course-content__body">
                  <h2>{{'Audiencia del curso'|t}}</h2>

                  {{content.field_curso_audiencia.0}}
            </div>
            {% endif %}

            {% if content.field_curso_aprenderas.0!="" %}
            <div class="course-content__body">
                  <h2>{{'Lo que aprenderás'|t}}</h2>

		      {{content.field_curso_aprenderas.0}}
            </div>
            {% endif %}


      </div>

	{# ------------------ #}


	{# <div class="target">
		{{content.field_curso_target}}
	</div> #}

	{# {{ drupal_view('votingapi_votes', 'block_2', node.id ) }} #}
	{# <div class="info">
		???
	</div> #}








</article>
